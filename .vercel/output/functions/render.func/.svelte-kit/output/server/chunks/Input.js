import { c as create_ssr_component, i as add_attribute } from './index.js';
/* empty css                                      */
/* src/lib/UI/Button.svelte generated by Svelte v3.55.0 */

const css$1 = {
	code: "button.svelte-1a4zis3{padding:1vh 2vh;margin:2vh;border:2px solid white;border-radius:30px;background-color:#111;color:white;cursor:pointer;transition:0.3s}button.svelte-1a4zis3:hover{background-color:white;border:2px solid #111;color:#111}button.big.svelte-1a4zis3{font-size:2rem;padding:1vh 3vh}",
	map: null
};

const Button = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { type = "button" } = $$props;
	let { mode = "normal" } = $$props;
	if ($$props.type === void 0 && $$bindings.type && type !== void 0) $$bindings.type(type);
	if ($$props.mode === void 0 && $$bindings.mode && mode !== void 0) $$bindings.mode(mode);
	$$result.css.add(css$1);
	return `<button${add_attribute("type", type, 0)} class="${["svelte-1a4zis3", mode === "big" ? "big" : ""].join(' ').trim()}">${slots.default ? slots.default({}) : ``} </button>`;
});

const Input_svelte_svelte_type_style_lang = '';

/* src/lib/Auth/Input.svelte generated by Svelte v3.55.0 */

const css = {
	code: "input.svelte-1gwr0oy{margin:2vh 0;height:5vh;width:15vw;text-align:center}",
	map: null
};

const Input = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { name = "" } = $$props;
	let { value = "" } = $$props;
	let { type = "text" } = $$props;
	name = name.toLowerCase();
	const placeholder = name.charAt(0).toUpperCase() + name.slice(1);
	if ($$props.name === void 0 && $$bindings.name && name !== void 0) $$bindings.name(name);
	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);
	if ($$props.type === void 0 && $$bindings.type && type !== void 0) $$bindings.type(type);
	$$result.css.add(css);

	return `${type === "text"
	? `<input type="${"text"}"${add_attribute("name", name, 0)}${add_attribute("placeholder", placeholder, 0)} class="${"svelte-1gwr0oy"}"${add_attribute("value", value, 0)}>`
	: `${type === "password"
		? `<input type="${"password"}"${add_attribute("name", name, 0)}${add_attribute("placeholder", placeholder, 0)} class="${"svelte-1gwr0oy"}"${add_attribute("value", value, 0)}>`
		: ``}`}`;
});

export { Button as B, Input as I };
